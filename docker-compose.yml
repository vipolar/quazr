services:
    postgres:
        image: postgres:16
        restart: unless-stopped
        container_name: quazr-postgres
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - ./quazr-data:/var/lib/postgresql/data
            - ./quazr-db/init:/docker-entrypoint-initdb.d:ro
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            start_period: 30s
            interval: 15s
            timeout: 5s
            retries: 5
        networks:
            - quazr-network

    postgres-migrator:
        image: postgres:16
        container_name: quazr-postgres-migrator
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            PGPASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - ./quazr-db/migrations:/migrations:ro
        entrypoint: ["/bin/sh", "-c"]
        command: |
            '
            set -e
            echo "Waiting for Postgres..."
            # pg_isready is already available in the image via depends_on healthcheck
            echo "Applying migrations..."
            for f in /migrations/*.sql; do
                echo "Running $$f"
                psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -v ON_ERROR_STOP=1 -f "$$f"
            done
            echo "Migrations complete."
            '
        networks:
            - quazr-network

    postgres-admin:
        image: dpage/pgadmin4
        restart: unless-stopped
        container_name: quazr-postgres-admin
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./quazr-adminboard/servers.json:/pgadmin4/servers.json:rw
            - pgadmin_data:/var/lib/pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
            PGADMIN_DISABLE_POSTFIX: true
            PGADMIN_LISTEN_PORT: 15432
        healthcheck:
            test: ["CMD-SHELL", "wget --quiet --spider --timeout=10 --tries=0 http://localhost:15432/misc/ping"]
            start_period: 60s
            interval: 60s
            timeout: 10s
            retries: 3
        ports:
            - ${PGADMIN_PORT}:15432
        networks:
            - quazr-network

    svelte-kit:
        image: node:20-alpine
        restart: unless-stopped
        container_name: quazr-sveltekit-dev
        depends_on:
            postgres:
                condition: service_healthy
        working_dir: /app
        volumes:
            - ./quazr-sk:/app
        command: sh -c "npm ci && npm run dev"
        environment:
            NODE_ENV: development
            # Polling helps on some hosts
            CHOKIDAR_USEPOLLING: "true"
            VITE_FORCE_HMR: "true"
            # This could be very scary!
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${POSTGRES_DB}
            PGUSER: ${POSTGRES_USER}
            PGHOST: postgres
            PGPORT: 5432
        ports:
            - "${VHMRPORT}:24678"
            - "${SVPORT}:5173"
        networks:
            - quazr-network

    caddy:
        image: caddy:latest
        restart: unless-stopped
        container_name: quazr-caddy-server
        volumes:
            - ./quazr-caddy/Caddyfile:/etc/caddy/Caddyfile
            - ./quazr-caddy/config:/config
            - ./quazr-caddy/data:/data
        networks:
            - quazr-network
        ports:
            - 443:443
            - 80:80

volumes:
    pgadmin_data:

networks:
    quazr-network:
        driver: bridge

